{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://promptpack.org/schema/latest/promptpack.schema.json",
  "title": "PromptPack Specification",
  "description": "Schema for packaging, testing, and running multi-prompt conversational systems",
  "version": "1.0.0",
  "type": "object",
  "required": ["id", "name", "version", "template_engine", "prompts"],
  "additionalProperties": false,
  
  "properties": {
    "$schema": {
      "type": "string",
      "description": "JSON Schema reference for validation and IDE support",
      "default": "https://promptpack.org/schema/v1/promptpack.schema.json",
      "examples": ["https://promptpack.org/schema/v1/promptpack.schema.json"]
    },
    
    "id": {
      "type": "string",
      "description": "Unique identifier for the pack. Used for referencing and caching. Should be lowercase with hyphens.",
      "pattern": "^[a-z][a-z0-9-]*$",
      "minLength": 1,
      "maxLength": 100,
      "examples": ["customer-support", "sales-assistant", "technical-help"]
    },
    
    "name": {
      "type": "string",
      "description": "Human-readable name for the pack. Displayed in UIs and documentation.",
      "minLength": 1,
      "maxLength": 200,
      "examples": ["Customer Support Pack", "Sales Assistant", "Technical Support"]
    },
    
    "version": {
      "type": "string",
      "description": "Pack version following Semantic Versioning 2.0.0 (MAJOR.MINOR.PATCH). Can optionally include 'v' prefix. Use MAJOR for breaking changes, MINOR for new features, PATCH for bug fixes. This version tracks the pack as a whole, while individual prompts can have independent versions.",
      "pattern": "^v?(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$",
      "examples": ["1.0.0", "v2.1.3", "1.0.0-alpha", "2.0.0-beta.1+build.123"]
    },
    
    "description": {
      "type": "string",
      "description": "Detailed description of the pack's purpose, use cases, and contents. Supports markdown formatting.",
      "maxLength": 5000,
      "examples": ["Complete customer support prompt pack with multiple task types for handling support, sales, and technical inquiries"]
    },
    
    "template_engine": {
      "type": "object",
      "description": "Template engine configuration shared across all prompts in the pack. Defines how variables are substituted and fragments are resolved.",
      "required": ["version", "syntax"],
      "additionalProperties": false,
      "properties": {
        "version": {
          "type": "string",
          "description": "Template engine version. Use 'v1' for the current stable version.",
          "examples": ["v1", "v2"]
        },
        "syntax": {
          "type": "string",
          "description": "Variable substitution syntax pattern. Defines how variables appear in templates.",
          "examples": ["{{variable}}", "${variable}", "{variable}"]
        },
        "features": {
          "type": "array",
          "description": "Optional list of supported template features beyond basic substitution.",
          "items": {
            "type": "string",
            "enum": ["basic_substitution", "fragments", "conditionals", "loops", "filters"]
          },
          "examples": [["basic_substitution", "fragments"]]
        }
      }
    },
    
    "prompts": {
      "type": "object",
      "description": "Map of task_type to prompt configuration. Each key is a task type (e.g., 'support', 'sales') and each value is a complete prompt definition. A pack must contain at least one prompt.",
      "minProperties": 1,
      "additionalProperties": {
        "$ref": "#/definitions/Prompt"
      },
      "examples": [{
        "support": {
          "id": "support",
          "name": "Support Bot",
          "version": "1.0.0",
          "system_template": "You are a helpful assistant."
        }
      }]
    },
    
    "fragments": {
      "type": "object",
      "description": "Shared template fragments that can be referenced by any prompt in the pack. Fragments are reusable text blocks resolved at compile time. Keys are fragment names, values are fragment content.",
      "additionalProperties": {
        "type": "string"
      },
      "examples": [{
        "customer_context": "Customer: {{customer_name}}\\nIssue: {{issue}}",
        "greeting": "Hello! How can I help you today?"
      }]
    },
    
    "tools": {
      "type": "object",
      "description": "Tool definitions that can be referenced by prompts. Tools enable the LLM to call external functions. Keys are tool names, values are tool specifications following the JSON Schema for function calling.",
      "additionalProperties": {
        "$ref": "#/definitions/Tool"
      }
    },
    
    "metadata": {
      "type": "object",
      "description": "Optional pack-level metadata for categorization, discovery, and operational planning.",
      "additionalProperties": true,
      "properties": {
        "domain": {
          "type": "string",
          "description": "Domain or category for this pack",
          "examples": ["customer-service", "healthcare", "finance"]
        },
        "language": {
          "type": "string",
          "description": "Primary language code (ISO 639-1)",
          "pattern": "^[a-z]{2}$",
          "examples": ["en", "es", "fr"]
        },
        "tags": {
          "type": "array",
          "description": "Tags for categorization and discovery",
          "items": {
            "type": "string"
          },
          "examples": [["support", "sales", "technical"]]
        },
        "cost_estimate": {
          "type": "object",
          "description": "Cost estimation for using this pack",
          "properties": {
            "min_cost_usd": {
              "type": "number",
              "description": "Minimum cost per execution in USD",
              "minimum": 0
            },
            "max_cost_usd": {
              "type": "number",
              "description": "Maximum cost per execution in USD",
              "minimum": 0
            },
            "avg_cost_usd": {
              "type": "number",
              "description": "Average cost per execution in USD",
              "minimum": 0
            }
          }
        }
      }
    },
    
    "compilation": {
      "type": "object",
      "description": "Information about when and how this pack was compiled. Generated automatically by the packc compiler.",
      "required": ["compiled_with", "created_at", "schema"],
      "properties": {
        "compiled_with": {
          "type": "string",
          "description": "Version of the packc compiler used to create this pack",
          "examples": ["packc-v0.1.0", "packc-v1.2.3"]
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "ISO 8601 timestamp when the pack was compiled",
          "examples": ["2025-10-31T12:00:00Z"]
        },
        "schema": {
          "type": "string",
          "description": "Pack format schema version used",
          "examples": ["v1", "v2"]
        },
        "source": {
          "type": "string",
          "description": "Optional source configuration file path",
          "examples": ["arena.yaml", "config/prompts.yaml"]
        }
      }
    }
  },
  
  "definitions": {
    "Prompt": {
      "type": "object",
      "description": "A single prompt configuration within a pack. Each prompt represents a specific task type (e.g., 'support', 'sales') with its own template, variables, tools, and validation rules. Prompts within a pack can evolve independently with their own version numbers.",
      "required": ["id", "name", "version", "system_template"],
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for this prompt, typically matching the task_type key",
          "pattern": "^[a-z][a-z0-9_-]*$",
          "examples": ["support", "sales", "technical_support"]
        },
        
        "name": {
          "type": "string",
          "description": "Human-readable name for this prompt",
          "minLength": 1,
          "examples": ["Support Bot", "Sales Assistant"]
        },
        
        "description": {
          "type": "string",
          "description": "Detailed description of this prompt's purpose and behavior",
          "examples": ["General customer support assistant for handling inquiries"]
        },
        
        "version": {
          "type": "string",
          "description": "Prompt version following Semantic Versioning 2.0.0. Independent from pack version, allowing individual prompts to evolve separately.",
          "pattern": "^v?(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$",
          "examples": ["1.0.0", "v2.1.0", "1.5.2-beta"]
        },
        
        "system_template": {
          "type": "string",
          "description": "The system prompt template. Use template syntax (e.g., {{variable}}) for variable substitution. This is the core instruction that guides the LLM's behavior.",
          "minLength": 1,
          "examples": [
            "You are a {{role}} assistant for {{company}}.\\n\\nProvide helpful, professional support.",
            "You are an expert in {{domain}}. Help users with {{task_description}}."
          ]
        },
        
        "variables": {
          "type": "array",
          "description": "Variable definitions for this prompt. Variables are placeholders in the template that are replaced with actual values at runtime.",
          "items": {
            "$ref": "#/definitions/Variable"
          }
        },
        
        "tools": {
          "type": "array",
          "description": "List of tool names that this prompt is allowed to use. Tools must be defined in the pack-level 'tools' object.",
          "items": {
            "type": "string"
          },
          "examples": [["lookup_order", "create_ticket"], ["search_products", "get_pricing"]]
        },
        
        "tool_policy": {
          "$ref": "#/definitions/ToolPolicy",
          "description": "Policy governing how tools can be used by this prompt"
        },
        
        "pipeline": {
          "$ref": "#/definitions/PipelineConfig",
          "description": "Pipeline configuration defining processing stages and middleware"
        },
        
        "parameters": {
          "$ref": "#/definitions/Parameters",
          "description": "LLM generation parameters like temperature and max_tokens"
        },
        
        "validators": {
          "type": "array",
          "description": "Validation rules (guardrails) applied to LLM responses",
          "items": {
            "$ref": "#/definitions/Validator"
          }
        },
        
        "tested_models": {
          "type": "array",
          "description": "Model testing results documenting which models have been tested with this prompt and their performance",
          "items": {
            "$ref": "#/definitions/TestedModel"
          }
        },
        
        "model_overrides": {
          "type": "object",
          "description": "Model-specific template modifications. Keys are model names (e.g., 'claude-3-opus', 'gpt-4'), values are override configurations.",
          "additionalProperties": {
            "$ref": "#/definitions/ModelOverride"
          }
        }
      }
    },
    
    "Variable": {
      "type": "object",
      "description": "A template variable definition with type information and validation rules. Variables are replaced with actual values when the prompt is rendered.",
      "required": ["name", "type", "required"],
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string",
          "description": "Variable name used in templates (e.g., {{name}})",
          "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$",
          "examples": ["role", "company", "customer_name"]
        },
        
        "type": {
          "type": "string",
          "description": "Data type of the variable",
          "enum": ["string", "number", "boolean", "object", "array"],
          "examples": ["string", "number"]
        },
        
        "required": {
          "type": "boolean",
          "description": "Whether this variable must be provided. Required variables without values will cause an error."
        },
        
        "default": {
          "description": "Default value used when variable is not provided. Cannot be set if required is true.",
          "examples": ["TechCo", 42, true, {"key": "value"}]
        },
        
        "description": {
          "type": "string",
          "description": "Human-readable description of the variable's purpose",
          "examples": ["The role of the assistant", "Customer's account ID"]
        },
        
        "example": {
          "description": "Example value showing expected format and content",
          "examples": ["support agent", "12345", "john@example.com"]
        },
        
        "validation": {
          "type": "object",
          "description": "Validation rules applied to the variable value at runtime",
          "additionalProperties": false,
          "properties": {
            "pattern": {
              "type": "string",
              "description": "Regular expression pattern (for string types)",
              "examples": ["^[a-zA-Z\\\\s]+$", "^\\\\d{5}$", "^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,}$"]
            },
            "min_length": {
              "type": "integer",
              "description": "Minimum string length (for string types)",
              "minimum": 0,
              "examples": [3, 10]
            },
            "max_length": {
              "type": "integer",
              "description": "Maximum string length (for string types)",
              "minimum": 1,
              "examples": [50, 1000]
            },
            "minimum": {
              "type": "number",
              "description": "Minimum numeric value (for number types)",
              "examples": [0, 1, 100]
            },
            "maximum": {
              "type": "number",
              "description": "Maximum numeric value (for number types)",
              "examples": [100, 1000]
            },
            "enum": {
              "type": "array",
              "description": "List of allowed values",
              "items": {},
              "examples": [["low", "medium", "high"], [1, 2, 3]]
            }
          }
        }
      }
    },
    
    "Tool": {
      "type": "object",
      "description": "A tool definition following OpenAI's function calling format. Tools enable the LLM to call external functions to retrieve data or perform actions.",
      "required": ["name", "description"],
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string",
          "description": "Tool name used for referencing and calling",
          "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$",
          "examples": ["lookup_order", "create_ticket", "search_database"]
        },
        
        "description": {
          "type": "string",
          "description": "Clear description of what the tool does. The LLM uses this to decide when to call the tool.",
          "minLength": 1,
          "examples": [
            "Look up order details by order ID",
            "Create a support ticket with title, description, and priority"
          ]
        },
        
        "parameters": {
          "type": "object",
          "description": "JSON Schema defining the tool's parameters. Follows JSON Schema specification.",
          "required": ["type", "properties"],
          "properties": {
            "type": {
              "type": "string",
              "enum": ["object"],
              "description": "Must be 'object' for tool parameters"
            },
            "properties": {
              "type": "object",
              "description": "Parameter definitions",
              "additionalProperties": {
                "type": "object"
              }
            },
            "required": {
              "type": "array",
              "description": "List of required parameter names",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    
    "ToolPolicy": {
      "type": "object",
      "description": "Governance policy for tool usage. Controls when and how tools can be called by the LLM.",
      "additionalProperties": false,
      "properties": {
        "tool_choice": {
          "type": "string",
          "description": "'auto' lets the LLM decide when to use tools, 'required' forces tool use, 'none' disables tools",
          "enum": ["auto", "required", "none"],
          "default": "auto",
          "examples": ["auto", "required"]
        },
        
        "max_rounds": {
          "type": "integer",
          "description": "Maximum number of LLM → tool → LLM cycles allowed per turn",
          "minimum": 1,
          "default": 5,
          "examples": [3, 5, 10]
        },
        
        "max_tool_calls_per_turn": {
          "type": "integer",
          "description": "Maximum number of tool calls allowed in a single turn",
          "minimum": 1,
          "default": 10,
          "examples": [1, 5, 10]
        },
        
        "blocklist": {
          "type": "array",
          "description": "List of tool names that are not allowed for this prompt (overrides tools list)",
          "items": {
            "type": "string"
          },
          "examples": [["dangerous_tool", "delete_data"]]
        }
      }
    },
    
    "PipelineConfig": {
      "type": "object",
      "description": "Pipeline configuration defining the processing stages and middleware applied to prompts and responses",
      "required": ["stages"],
      "additionalProperties": false,
      "properties": {
        "stages": {
          "type": "array",
          "description": "Ordered list of pipeline stages. Common stages: 'template', 'provider', 'validator'",
          "items": {
            "type": "string"
          },
          "examples": [["template", "provider", "validator"]]
        },
        
        "middleware": {
          "type": "array",
          "description": "Middleware components with their configurations. Applied in order during pipeline execution.",
          "items": {
            "$ref": "#/definitions/MiddlewareConfig"
          }
        }
      }
    },
    
    "MiddlewareConfig": {
      "type": "object",
      "description": "Configuration for a single middleware component in the pipeline",
      "required": ["type"],
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "description": "Middleware type identifier",
          "examples": ["template", "provider", "validator", "custom"]
        },
        
        "config": {
          "type": "object",
          "description": "Type-specific configuration for the middleware",
          "additionalProperties": true
        }
      }
    },
    
    "Parameters": {
      "type": "object",
      "description": "LLM generation parameters controlling the model's behavior and output characteristics",
      "additionalProperties": false,
      "properties": {
        "temperature": {
          "type": "number",
          "description": "Sampling temperature (0-2). Higher values make output more random, lower values more deterministic.",
          "minimum": 0,
          "maximum": 2,
          "examples": [0.7, 1.0]
        },
        
        "max_tokens": {
          "type": "integer",
          "description": "Maximum number of tokens to generate in the response",
          "minimum": 1,
          "examples": [100, 1000, 4000]
        },
        
        "top_p": {
          "type": "number",
          "description": "Nucleus sampling parameter (0-1). Alternative to temperature for controlling randomness.",
          "minimum": 0,
          "maximum": 1,
          "examples": [0.9, 1.0]
        },
        
        "top_k": {
          "type": ["integer", "null"],
          "description": "Top-k sampling parameter. Limits to top K tokens. Null means no limit.",
          "minimum": 1,
          "examples": [40, 100, null]
        },
        
        "frequency_penalty": {
          "type": "number",
          "description": "Penalty for token frequency (-2 to 2). Positive values reduce repetition.",
          "minimum": -2,
          "maximum": 2,
          "examples": [0, 0.5]
        },
        
        "presence_penalty": {
          "type": "number",
          "description": "Penalty for token presence (-2 to 2). Positive values encourage new topics.",
          "minimum": -2,
          "maximum": 2,
          "examples": [0, 0.5]
        }
      }
    },
    
    "Validator": {
      "type": "object",
      "description": "A validation rule (guardrail) applied to LLM responses. Validators can check content, length, format, and other constraints to ensure response quality and safety.",
      "required": ["type", "enabled"],
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of validation to perform",
          "enum": [
            "banned_words",
            "max_length",
            "min_length",
            "regex_match",
            "json_schema",
            "sentiment",
            "toxicity",
            "pii_detection",
            "custom"
          ],
          "examples": ["banned_words", "max_length"]
        },
        
        "enabled": {
          "type": "boolean",
          "description": "Whether this validator is active. Allows temporarily disabling validators without removing them."
        },
        
        "fail_on_violation": {
          "type": "boolean",
          "description": "If true, validation failures cause an error. If false, violations are logged but allowed.",
          "default": false
        },
        
        "params": {
          "type": "object",
          "description": "Validator-specific parameters",
          "additionalProperties": true,
          "examples": [
            {"words": ["inappropriate", "banned"]},
            {"max_characters": 1000, "max_tokens": 250}
          ]
        }
      }
    },
    
    "TestedModel": {
      "type": "object",
      "description": "Testing results for a specific model. Documents which models have been tested with this prompt and their performance metrics.",
      "required": ["provider", "model", "date"],
      "additionalProperties": false,
      "properties": {
        "provider": {
          "type": "string",
          "description": "LLM provider name",
          "examples": ["openai", "anthropic", "azure", "bedrock"]
        },
        
        "model": {
          "type": "string",
          "description": "Specific model identifier",
          "examples": ["gpt-4", "gpt-3.5-turbo", "claude-3-opus", "claude-3-sonnet"]
        },
        
        "date": {
          "type": "string",
          "format": "date",
          "description": "Date when the model was tested (YYYY-MM-DD)",
          "examples": ["2025-10-31", "2025-12-01"]
        },
        
        "success_rate": {
          "type": "number",
          "description": "Success rate (0-1) from test runs",
          "minimum": 0,
          "maximum": 1,
          "examples": [0.95, 0.87]
        },
        
        "avg_tokens": {
          "type": "number",
          "description": "Average number of tokens used per response",
          "minimum": 0,
          "examples": [150, 500]
        },
        
        "avg_cost": {
          "type": "number",
          "description": "Average cost per execution in USD",
          "minimum": 0,
          "examples": [0.0045, 0.012]
        },
        
        "avg_latency_ms": {
          "type": "number",
          "description": "Average response latency in milliseconds",
          "minimum": 0,
          "examples": [1200, 3500]
        },
        
        "notes": {
          "type": "string",
          "description": "Additional notes about model performance or observations"
        }
      }
    },
    
    "ModelOverride": {
      "type": "object",
      "description": "Model-specific template modifications. Allows customizing prompts for specific models without changing the base template.",
      "additionalProperties": false,
      "properties": {
        "system_template_prefix": {
          "type": "string",
          "description": "Text prepended to the system template for this model",
          "examples": ["<thinking>\\n", "[Task]\\n"]
        },
        
        "system_template_suffix": {
          "type": "string",
          "description": "Text appended to the system template for this model",
          "examples": ["\\n\\nBe concise and direct.", "\\n</thinking>"]
        },
        
        "system_template": {
          "type": "string",
          "description": "Complete replacement system template for this model (overrides the base template entirely)"
        },
        
        "parameters": {
          "$ref": "#/definitions/Parameters",
          "description": "Model-specific parameter overrides"
        }
      }
    }
  },
  
  "examples": [
    {
      "$schema": "https://promptpack.org/schema/v1/promptpack.schema.json",
      "id": "customer-support",
      "name": "Customer Support Pack",
      "version": "1.0.0",
      "description": "Complete customer support prompt pack with multiple task types",
      "template_engine": {
        "version": "v1",
        "syntax": "{{variable}}",
        "features": ["basic_substitution", "fragments"]
      },
      "prompts": {
        "support": {
          "id": "support",
          "name": "Support Bot",
          "description": "General customer support assistant",
          "version": "1.0.0",
          "system_template": "You are a {{role}} assistant for {{company}}.",
          "variables": [
            {
              "name": "role",
              "type": "string",
              "required": true,
              "description": "The role of the assistant",
              "example": "support agent"
            }
          ],
          "tools": ["lookup_order"],
          "parameters": {
            "temperature": 0.7,
            "max_tokens": 1500
          }
        }
      },
      "tools": {
        "lookup_order": {
          "name": "lookup_order",
          "description": "Look up order details by order ID",
          "parameters": {
            "type": "object",
            "properties": {
              "order_id": {
                "type": "string",
                "description": "The order ID to look up"
              }
            },
            "required": ["order_id"]
          }
        }
      }
    }
  ]
}
